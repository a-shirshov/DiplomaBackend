// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/token_manager.go

// Package mock is a generated GoMock package.
package mock

import (
	models "Diploma/internal/models"
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt/v4"
	gomock "github.com/golang/mock/gomock"
)

// MockTokenManager is a mock of TokenManager interface.
type MockTokenManager struct {
	ctrl     *gomock.Controller
	recorder *MockTokenManagerMockRecorder
}

// MockTokenManagerMockRecorder is the mock recorder for MockTokenManager.
type MockTokenManagerMockRecorder struct {
	mock *MockTokenManager
}

// NewMockTokenManager creates a new mock instance.
func NewMockTokenManager(ctrl *gomock.Controller) *MockTokenManager {
	mock := &MockTokenManager{ctrl: ctrl}
	mock.recorder = &MockTokenManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenManager) EXPECT() *MockTokenManagerMockRecorder {
	return m.recorder
}

// CheckTokenAndGetClaims mocks base method.
func (m *MockTokenManager) CheckTokenAndGetClaims(refreshToken string) (jwt.MapClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckTokenAndGetClaims", refreshToken)
	ret0, _ := ret[0].(jwt.MapClaims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckTokenAndGetClaims indicates an expected call of CheckTokenAndGetClaims.
func (mr *MockTokenManagerMockRecorder) CheckTokenAndGetClaims(refreshToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckTokenAndGetClaims", reflect.TypeOf((*MockTokenManager)(nil).CheckTokenAndGetClaims), refreshToken)
}

// CreateToken mocks base method.
func (m *MockTokenManager) CreateToken(userId int) (*models.TokenDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken", userId)
	ret0, _ := ret[0].(*models.TokenDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MockTokenManagerMockRecorder) CreateToken(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockTokenManager)(nil).CreateToken), userId)
}

// ExtractTokenMetadata mocks base method.
func (m *MockTokenManager) ExtractTokenMetadata(token string) (*models.AccessDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractTokenMetadata", token)
	ret0, _ := ret[0].(*models.AccessDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractTokenMetadata indicates an expected call of ExtractTokenMetadata.
func (mr *MockTokenManagerMockRecorder) ExtractTokenMetadata(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractTokenMetadata", reflect.TypeOf((*MockTokenManager)(nil).ExtractTokenMetadata), token)
}
