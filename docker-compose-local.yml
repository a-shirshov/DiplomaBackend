version: "3.5"
services:
  server:
    container_name: server
    image: server
    build: 
      context: "."
      dockerfile: Dockerfile
    restart: unless-stopped
    command: "./server"
    ports:
      - "8088:8000"
    volumes:
      - ./images:/partypoint/static/images
    depends_on:
      - redis
      - postgres
      - recomendation

  recomendation:
    container_name: recomendation_module
    image: recomendation_module
    build:
      context: "./internal/recomendationModule"
      dockerfile: Dockerfile
    restart: "unless-stopped"
    command: "python server.py"
    ports:
      - "50051:50051"
    depends_on:
      - postgres

  postgres:
    image: postgres_with_pg_similarity
    build: 
      context: "."
      dockerfile: pg_Dockerfile
    container_name: psql_pg_sim
    restart: always
    env_file:
      - /home/artyom/DiplomaBackend/.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5439:5432"
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - /diplomaVolumes/postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
      
  redis:
    restart: always
    image: redis:latest
    ports:
      - "6380:6379"